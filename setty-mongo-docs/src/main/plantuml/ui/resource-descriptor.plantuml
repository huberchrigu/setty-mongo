@startuml
class SchemaService<<Service>>
interface ResourceDescriptorProvider {
    getDescriptor()
    getDescriptorAndAssociations()
}
interface PropertyDescriptor {
}
class CombiningDescriptor {
}
class ResourceAdapter
class ResourceProperty {
    resolveDescriptor()
    getDescriptor()
}
class JsonSchemaDescriptor {
}
class AlpsResourceDescriptor {
}

SchemaService <.. ResourceDescriptorProvider

ResourceProperty <|-- ResourceAdapter
ResourceProperty ..> ResourceDescriptorProvider

PropertyDescriptor <.. ResourceProperty
PropertyDescriptor <|-- JsonSchemaDescriptor
PropertyDescriptor <|-- AlpsResourceDescriptor
PropertyDescriptor <|-- CombiningDescriptor
PropertyDescriptor <.. ResourceDescriptorProvider

CombiningDescriptor ..> JsonSchemaDescriptor
CombiningDescriptor ..> AlpsResourceDescriptor

note right of PropertyDescriptor
    Static description of a resource/property.
end note

note bottom of ResourceDescriptorProvider
    Resolving associations:
    1. Find a descriptor with the ability to get the associated resource name
    3. Fetch the associated resource
    4. Get all children and then do the same
end note

note bottom of AlpsResourceDescriptor
    Knows which resource belongs to an association/uri property.
end note

@enduml